{
    // Enforcing
    "bitwise"       : false,    // true: Prohibit bitwise operators (&, |, ^, etc.)
    "camelcase"     : false,    // true: Identifiers must be in camelCase
    "curly"         : false,    // true: Require {} for every new block or scope
    "eqeqeq"        : false,    // true: Require triple equals (===) for comparison
    "forin"         : false,    // true: Require filtering for..in loops with obj.hasOwnProperty()
    "freeze"        : true,     // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
    "immed"         : false,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
    "latedef"       : false,    // true: Require variables/functions to be defined before being used
    "newcap"        : false,    // true: Require capitalization of all constructor functions e.g. `new F()`
    "noarg"         : true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`
    "noempty"       : true,     // true: Prohibit use of empty blocks
    "nonbsp"        : true,     // true: Prohibit "non-breaking whitespace" characters.
    "nonew"         : false,    // true: Prohibit use of constructors for side-effects (without assignment)
    "undef"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)
    "unused"        : true,     // Unused variables:
                                //   true     : all variables, last function parameter
                                //   "vars"   : all variables only
                                //   "strict" : all variables, all function parameters
    "strict"        : true,     // true: Requires all functions run in ES5 Strict Mode
    "esversion"     : 8,         // {int} Specify the ECMAScript version to which the code must adhere.
    "laxbreak"      : true,      // true: Tolerate possibly unsafe line breakings
    "loopfunc"      : true,     // true: Tolerate functions being defined in loops

    // Environments
    "browser"       : true,     // Web Browser (window, document, etc)
    "browserify"    : true,     // Browserify (node.js code in the browser)
    "devel"         : true,     // Development/debugging (alert, confirm, etc)
    "typed"         : false,    // Globals for typed array constructions
    "worker"        : false    // Web Workers
}
