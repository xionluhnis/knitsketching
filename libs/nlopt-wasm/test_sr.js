"use strict";

// arguments
const main_algo = parseInt(process.argv[2]) || -1;
const local_algo = parseInt(process.argv[3]) || -1;
const dataIdx = parseInt(process.argv[4]) || 0;
const data = [
  [
    0.07799235900618262, 0.08869794485455573,
    0.10401113706725096, 0.10134338093813033,
    0.09611642899595174, 0.09701562745831827,
    0.08349987161094763, 0.07147650328635469,
    0.06631489646997735, 0.06806400318892658,
    0.07188345491075387, 0.07664237666219531,
    0.08576979569083787, 0.10535596014274407,
    0.09536034215104605, 0.081301745112623,
    0.08611945439230295, 0.07484994813456547,
    0.06306159501816233, 0.05558934233573809,
    0.05707434208407869, 0.06660738977927783
  ],
  [
    -0.2377872098473962, -0.24029820534726543,
    -0.052550640316041175, 0.21903063627766794,
    0.5706716229729238, 0.7281976851229457,
    0.6826071269171754, 0.5625336655093716,
    0.4051960185583807, 0.3300602840774898,
    0.2935411492477873, 0.28927402723361717,
    0.3582682845055327, 0.5903596476869968,
    0.8154826060520461, 0.851067215741325,
    0.7320113231299912, 0.5134235903075464,
    0.2526773547938434, 0.0229622210167386,
    -0.026812171221293, 0.07365000768618724,
    0.1832171177507722, 0.27288757122222096,
    0.32169346773581275, 0.28992700832143714,
    0.1676710338889953, 0.011802739294878295,
    -0.11665134739903205, -0.20117675083117859,
    -0.22520473898855609, -0.18566255528707742,
    -0.04885666657741605, 0.08422836074386253,
    0.12837075518829777, 0.08607675107192647,
    -0.0189951703983825, -0.12557877931421269
  ]
];

// wasm module
const sr_module = require('./sr_sampling.js');

sr_module().then(srm => {
  const cdata = data[dataIdx];
  // params
  if(main_algo >= 0)
    srm._set_main_algorithm(main_algo);
  if(local_algo >= 0)
    srm._set_local_algorithm(local_algo);
  srm._set_max_eval(1e2);
  srm._set_verbose(true);

  // check gradient before
  srm._check_gradient(true, 1e-4);

  const sr = srm.nlopt_optimize({
    cdata, weights: [1, 1],
    circular: true,
    simplicityPower: 2,
    verbose: true
  });
  console.log('Solution:', sr);
});
